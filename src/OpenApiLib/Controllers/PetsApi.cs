/*
 * Swagger Petstore
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using OpenApiLib.Attributes;
using OpenApiLib.Models;

namespace OpenApiLib.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class PetsApiController : ControllerBase
    { 
        /// <summary>
        /// Create a pet
        /// </summary>
        /// <param name="pet"></param>
        /// <response code="201">Null response</response>
        /// <response code="0">unexpected error</response>
        [HttpPost]
        [Route("/v1/pets")]
        [Consumes("application/json")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 0, type: typeof(Error))]
        public abstract IActionResult CreatePets([FromBody]Pet pet);

        /// <summary>
        /// List all pets
        /// </summary>
        /// <param name="limit">How many items to return at one time (max 100)</param>
        /// <response code="200">A paged array of pets</response>
        /// <response code="0">unexpected error</response>
        [HttpGet]
        [Route("/v1/pets")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(List<Pet>))]
        [ProducesResponseType(statusCode: 0, type: typeof(Error))]
        public abstract IActionResult ListPets([FromQuery (Name = "limit")]int? limit);

        /// <summary>
        /// Info for a specific pet
        /// </summary>
        /// <param name="petId">The id of the pet to retrieve</param>
        /// <response code="200">Expected response to a valid request</response>
        /// <response code="0">unexpected error</response>
        [HttpGet]
        [Route("/v1/pets/{petId}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Pet))]
        [ProducesResponseType(statusCode: 0, type: typeof(Error))]
        public abstract IActionResult ShowPetById([FromRoute (Name = "petId")][Required]string petId);
    }
}